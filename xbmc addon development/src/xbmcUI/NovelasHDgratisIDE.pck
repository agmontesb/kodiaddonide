["media", {"AtoZ": {"params": {"url": "http://www.novelashdgratis.tv", "regexp": "(?#<div id=\"alfabeto\" .a<href=url *=label>*>)", "compflags": "re.DOTALL|re.IGNORECASE"}, "type": "thread", "name": "A - Z", "up": "ultimas"}, "ultimas": {"down": "rootmenu_ultimas_lnk", "params": {"url": "http://www.novelashdgratis.tv", "regexp": "(?#<div class=\"picture\" a{href=url title=label img.src=iconImage}>)", "compflags": "re.DOTALL|re.IGNORECASE"}, "type": "thread", "name": "Ultimas telenovelas agregadas", "up": "listacapitulos"}, "media": {"down": "urlresolvers", "type": "thread", "params": {"url": "https://www.youtube.com/watch?v=Vw8ViaL7-m4", "regexp": "onclick=\"location.href='(?P<videourl>.+?)'\"  value=\"Click Here to Play\" />", "compflags": "re.DOTALL", "enabled": false}, "name": "media"}, "rootmenu": {"down": "ultimas_rootmenu_lnk", "type": "list", "params": {"discrim": "option"}, "name": "rootmenu"}, "rootmenu_ultimas_lnk": {"sibling": "AtoZ", "type": "link", "up": "ultimas", "params": {}, "name": "rootmenu"}, "ultimas_rootmenu_lnk": {"params": {"source": true}, "type": "link", "name": "ultimas", "up": "rootmenu"}, "urlresolvers": {"down": "listacapitulos", "params": {"url": "http://www.novelashdgratis.tv/ver/imperio-capitulo-99/", "regexp": "<script>(?P<label>(?P<host>[^(>]+))\\(\\\"(?P<media_id>[^\"]+)\\\"\\)</script>", "compflags": "re.DOTALL", "enabled": false}, "type": "thread", "name": "urlresolvers", "up": "media"}, "listnovelas": {"sibling": "ultimas", "type": "thread", "up": "listacapitulos", "params": {"url": "http://www.novelashdgratis.tv", "regexp": "(?#<li a{href=url title=label}>)", "compflags": "re.DOTALL|re.IGNORECASE"}, "name": "Telenovelas que se transmiten"}, "listacapitulos": {"down": "listnovelas", "type": "thread", "params": {"url": "http://www.novelashdgratis.tv/en-nombre-del-honor/", "regexp": "(?#<a href=url title=\"ver .+?\"=label class=\"lcc\">)", "compflags": "re.DOTALL|re.IGNORECASE"}, "name": "listacapitulos", "up": "urlresolvers"}}]
{"addon_id": "plugin.video.novelashd", "addon_requires": "xbmc.python,2.1.0,|script.module.urlresolver,2.4.0,|script.module.metahandler,2.9.0,", "addon_name": "Novelas HD Gratis IDE", "addon_resources": "basicFunc.py,resources/lib,True,basicFunc.py|CustomRegEx.py,resources/lib,True,CustomRegEx.py|teleresolvers.py,resources/lib,True,teleresolvers.py", "addon_fanart": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/novelasHD.jpg", "addon_icon": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/novelasHD.png"}
{"urlresolvers": "def urlresolvers():\n    url = args.get(\"url\")[0]\n    regexp = r'<script>(?P<label>(?P<host>[^(>]+))\\(\\\"(?P<media_id>[^\"]+)\\\"\\)</script>'\n    url, data = openUrl(url)\n    compflags = re.DOTALL\n    subMenus = parseUrlContent(url, data, regexp, compflags)\n    regexp = r'<iframe src=\"https?://(?P<label>(?P<host>[^.]+)).+?(?:\\?ref=|\\?vid=|embed[-/])(?P<media_id>[0-9a-zA-Z]+)'\n    compflags = re.IGNORECASE\n    subMenus += parseUrlContent(url, data, regexp, compflags)\n    menuContent = []\n    for elem in subMenus:\n        itemParam = dict([(key,elem.pop(key)) for key  in elem.keys() if key in LISTITEM_KEYS])\n        itemParam[\"isFolder\"] = False\n        otherParam = {}\n        paramDict = dict([(key, value[0]) for key, value in args.items() if hasattr(value, \"__getitem__\") and key not in [\"header\", \"footer\"]])\n        paramDict.update({'menu': u'media'})\n        paramDict.update(elem)\n        menuContent.append([paramDict, itemParam, otherParam])\n    return menuContent\n", "media": "def media():\n    import re\n    import teleresolvers\n    headers = {'Referer': 'http://www.novelashdgratis.tv/'}\n    host = args.get(\"host\")[0]\n    media_id = args.get(\"media_id\")[0]\n    resolver = getattr(teleresolvers, host, None)\n    if not resolver: return None\n    url = resolver(media_id, headers)\n\n    li = xbmcgui.ListItem(path = url)\n    if args.get(\"icondef\", None): li.setThumbnailImage(args[\"icondef\"][0])\n    if args.get(\"labeldef\", None): li.setLabel(args[\"labeldef\"][0])\n    li.setProperty('IsPlayable', 'true')\n    li.setProperty('mimetype', 'video/x-msvideo')\n    return xbmcplugin.setResolvedUrl(handle=addon_handle,succeeded=True,listitem=li)\n"}
